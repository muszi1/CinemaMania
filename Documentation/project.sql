--
-- Script was generated by Devart dbForge Studio for MySQL, Version 10.1.24.0
-- Product home page: https://www.devart.com/dbforge/mysql/studio
-- Script date 11/13/2024 12:42:37 PM
-- Server version: 10.4.32
--

--
-- Disable foreign keys
--
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

--
-- Set SQL mode
--
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

--
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

DROP DATABASE IF EXISTS projekt;

CREATE DATABASE projekt
CHARACTER SET utf8mb4
COLLATE utf8mb4_hungarian_ci;

--
-- Set default database
--
USE projekt;

--
-- Create table `genre`
--
CREATE TABLE genre (
  id int(11) NOT NULL,
  genre_name varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_hungarian_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create table `user`
--
CREATE TABLE user (
  id int(11) NOT NULL AUTO_INCREMENT,
  full_name varchar(255) DEFAULT NULL,
  password varchar(255) DEFAULT NULL,
  type enum ('developer', 'user') DEFAULT NULL,
  genre_id int(11) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_hungarian_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE user
ADD CONSTRAINT FK_user_genre_id FOREIGN KEY (genre_id)
REFERENCES genre (id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create table `movies`
--
CREATE TABLE movies (
  id int(11) NOT NULL AUTO_INCREMENT,
  name varchar(50) DEFAULT NULL,
  genre_id int(11) DEFAULT NULL,
  length_min int(11) DEFAULT NULL,
  description varchar(255) DEFAULT NULL,
  user_id int(11) DEFAULT NULL,
  rating double DEFAULT NULL,
  img varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_hungarian_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE movies
ADD CONSTRAINT FK_movies_genre_id FOREIGN KEY (genre_id)
REFERENCES genre (id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create foreign key
--
ALTER TABLE movies
ADD CONSTRAINT FK_movies_user_id FOREIGN KEY (user_id)
REFERENCES user (id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create table `recommendation`
--
CREATE TABLE recommendation (
  id int(11) NOT NULL AUTO_INCREMENT,
  post_id int(11) DEFAULT NULL,
  user_id int(11) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_hungarian_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE recommendation
ADD CONSTRAINT FK_recommendation_movies_id FOREIGN KEY (post_id)
REFERENCES movies (id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create foreign key
--
ALTER TABLE recommendation
ADD CONSTRAINT FK_recommendation_user_id FOREIGN KEY (user_id)
REFERENCES user (id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create table `comment`
--
CREATE TABLE comment (
  id int(11) NOT NULL AUTO_INCREMENT,
  user_id int(11) DEFAULT NULL,
  post_id int(11) DEFAULT NULL,
  text varchar(255) DEFAULT NULL,
  PRIMARY KEY (id)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_hungarian_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE comment
ADD CONSTRAINT FK_comment_movies_id FOREIGN KEY (post_id)
REFERENCES movies (id) ON DELETE NO ACTION ON UPDATE NO ACTION;

--
-- Create foreign key
--
ALTER TABLE comment
ADD CONSTRAINT FK_comment_user_id FOREIGN KEY (user_id)
REFERENCES user (id) ON DELETE NO ACTION ON UPDATE NO ACTION;

-- Table projekt.genre does not contain any data (it is empty)

-- Table projekt.user does not contain any data (it is empty)

-- Table projekt.movies does not contain any data (it is empty)

-- Table projekt.recommendation does not contain any data (it is empty)

-- Table projekt.comment does not contain any data (it is empty)

--
-- Restore previous SQL mode
--
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

--
-- Enable foreign keys
--
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;